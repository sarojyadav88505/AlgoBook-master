 void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;\n
    if (left < n && arr[left] > arr[largest])
      largest = left;\n
    if (right < n && arr[right] > arr[largest])
      largest = right;\n
    if (largest != i) {
      swap(arr[i], arr[largest]);
      heapify(arr, n, largest);
    }
  }\n\n
  void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--)
      heapify(arr, n, i);\n
    for (int i = n - 1; i >= 0; i--) {
      swap(arr[0], arr[i]);\n
      // Heapify root element to get highest element at root again
      heapify(arr, i, 0);
    }
  }
